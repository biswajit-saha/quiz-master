{"version":3,"sources":["components/Navbar.js","components/Welcome.js","components/Option.js","components/Quiz.js","components/Result.js","components/Container.js","components/Footer.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["navbarCollapse","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Welcome","onClick","this","props","showQuiz","Component","Option","handleClick","e","_this","answered","currentTarget","_this2","css_class","optionList","options","map","option","index","length","key","String","fromCharCode","Quiz","state","qi","total","question_set","correct","showNext","setState","showResult","optionLength","css","i","answer_number","push","currentQuestion","btn_class","question","components_Option","connect","Result","percent","toFixed","Math","floor","Container","comp","VisibleComponent","components_Quiz","components_Result","components_Welcome","Footer","App","Navbar","components_Container","components_Footer","Boolean","window","location","hostname","match","initState","rootReducer","arguments","undefined","store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"k4DAwBeA,EAvBQ,WACnB,OACIC,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAAjC,cACAJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,kBAChFC,gBAAc,iBAAiBC,gBAAc,QAAQC,aAAW,qBAChEV,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAEpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BQ,GAAG,kBACzCX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWC,KAAK,KAA7B,iBCUjBQ,mLApBP,OACIZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,qCAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,+NAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkBU,QAASC,KAAKC,MAAMC,UAAtD,6BAbNC,oBCuBPC,6MAtBXC,YAAc,SAACC,GACXC,EAAKN,MAAMO,SAASF,EAAEG,cAAcZ,6EAE/B,IAAAa,EAAAV,KACAW,EAAaX,KAAKC,MAAlBU,UACCC,EAAaZ,KAAKC,MAAMY,QAAQC,IAAK,SAACC,EAAQC,GAChD,IAAI3B,EAAYsB,EAAUM,OAAS,UAAYN,EAAUK,GAAS,SAClE,OACI9B,EAAAC,EAAAC,cAAA,OAAKC,UAAWA,EAAW6B,IAAKF,EAAOnB,GAAImB,EAAOjB,QAAS,kBAAMW,EAAKT,MAAMO,SAASQ,KACjF9B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAe8B,OAAOC,aAAa,GAAKJ,IAAeD,KAKnF,OACI7B,EAAAC,EAAAC,cAAA,WACKwB,UAjBIT,aCEfkB,6MACFC,MAAQ,CACJC,GAAI,EACJC,MAAQjB,EAAKN,MAAMwB,aAAaR,OAChCT,UAAU,EACVkB,QAAS,EACTf,UAAW,MAEfgB,SAAW,WACP,GAAIpB,EAAKe,MAAMC,GAAKhB,EAAKe,MAAME,MAAQ,CACnC,IAAID,EAAKhB,EAAKe,MAAMC,GAAK,EACzBhB,EAAKqB,SAAS,CACVpB,UAAU,EACVe,GAAIA,EACJZ,UAAW,UAETJ,EAAKe,MAAMC,KAAOhB,EAAKe,MAAME,QAAiC,IAAxBjB,EAAKe,MAAMd,SACvDD,EAAKqB,SAAS,CACVpB,UAAU,IAGdD,EAAKN,MAAM4B,WAAWtB,EAAKe,MAAME,MAAOjB,EAAKe,MAAMI,YAG3DlB,SAAW,SAACQ,GACR,IAAMc,EAAevB,EAAKN,MAAMwB,aAAalB,EAAKe,MAAMC,GAAI,GAAGV,QAAQI,OACjEc,EAAM,GACZ,IAAG,IAAUxB,EAAKe,MAAMd,SAAU,CAC9B,IAAK,IAAIwB,EAAI,EAAGA,EAAIF,IAAgBE,EAC5BA,IAAMhB,GAAUA,EAAQ,IAAOT,EAAKN,MAAMwB,aAAalB,EAAKe,MAAMC,GAAI,GAAGU,cACzEF,EAAIG,KAAK,WACFF,IAAMhB,GAAUA,EAAQ,IAAOT,EAAKN,MAAMwB,aAAalB,EAAKe,MAAMC,GAAI,GAAGU,cAChFF,EAAIG,KAAK,aACDF,IAAMhB,GAASgB,IAAMzB,EAAKN,MAAMwB,aAAalB,EAAKe,MAAMC,GAAI,GAAGU,cAAgB,EACvFF,EAAIG,KAAK,WAETH,EAAIG,KAAK,YAEb3B,EAAKqB,SAAS,CACVjB,UAAWoB,IAGbf,EAAQ,IAAOT,EAAKN,MAAMwB,aAAalB,EAAKe,MAAMC,GAAI,GAAGU,cAC3D1B,EAAKqB,SAAS,CACVpB,UAAU,EACVkB,QAASnB,EAAKe,MAAMI,QAAU,IAGlCnB,EAAKqB,SAAS,CACVpB,UAAU,8EAKjB,IAED2B,EADmBnC,KAAKC,MAArBwB,aAC4BzB,KAAKsB,MAAMC,GAAI,GAC5Ca,EAAYpC,KAAKsB,MAAMd,SAAW,kBAAoB,oBAC5D,OACItB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,sBAAcY,KAAKsB,MAAMC,GAAzB,IAA8BvB,KAAKsB,MAAME,QAE7CtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACV8C,EAAgBE,SADrB,IAC+BnD,EAAAC,EAAAC,cAAA,YAE/BF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAW+C,EAAWrC,QAASC,KAAK2B,UACrC3B,KAAKsB,MAAMC,KAAOvB,KAAKsB,MAAME,MAASxB,KAAKsB,MAAMd,SAAW,gBAAkB,qBAAyBR,KAAKsB,MAAMd,SAAW,aAAe,yBAK7JtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAACkD,EAAD,CAAQzB,QAASsB,EAAgBtB,QAASF,UAAWX,KAAKsB,MAAMX,UAAWH,SAAUR,KAAKQ,WAC1FtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAAf,uCA/ETc,aA6FJoC,cANQ,SAACjB,GACpB,MAAO,CACHG,aAAcH,EAAMG,eAIbc,CAAwBlB,GCpExBmB,mLAzBP,IAAIC,GAAYzC,KAAKC,MAAMyB,QAAU1B,KAAKC,MAAMuB,MAAS,KAAKkB,QAAQ,GAEtE,OADAD,EAAUA,EAAU,IAAM,EAAIE,KAAKC,MAAMH,GAAWA,EAEhDvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,2CAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAAf,qBACsBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaW,KAAKC,MAAMyB,SAD9D,WACqFxC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaW,KAAKC,MAAMuB,OAD7H,wBAEItC,EAAAC,EAAAC,cAAA,WAFJ,cAEoBF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaoD,EAA7B,OAGxBvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkBU,QAASC,KAAKC,MAAMC,UAAtD,0BAlBPC,aC2CN0C,6MAvCXvB,MAAQ,CACJwB,KAAM,aAEV5C,SAAW,WACPK,EAAKqB,SAAS,CACVkB,KAAM,YAGdjB,WAAa,SAACL,EAAOE,GACjBnB,EAAKqB,SAAS,CACVkB,KAAM,SACNtB,MAAOA,EACPE,QAASA,OAGjBqB,iBAAmB,WACf,OAAOxC,EAAKe,MAAMwB,MACd,IAAK,OACL,OAAQ5D,EAAAC,EAAAC,cAAC4D,EAAD,CAAMnB,WAAYtB,EAAKsB,aAE/B,IAAK,SACD,OAAQ3C,EAAAC,EAAAC,cAAC6D,EAAD,CAAQ/C,SAAUK,EAAKL,SAAUsB,MAAOjB,EAAKe,MAAME,MAAOE,QAASnB,EAAKe,MAAMI,UAE1F,QACA,OAAOxC,EAAAC,EAAAC,cAAC8D,EAAD,CAAShD,SAAUK,EAAKL,qFAKnC,OACIhB,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVW,KAAK+C,4BAjCF5C,aCOTgD,EAVA,WACX,OACIjE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAf,aACcH,EAAAC,EAAAC,cAAA,sBADd,uBCYGgE,mLAVX,OACElE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACiE,EAAD,MACAnE,EAAAC,EAAAC,cAACkE,EAAD,MACApE,EAAAC,EAAAC,cAACmE,EAAD,cANUpD,aCOEqD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,sECjBAC,QAMSC,EAJK,WAA+B,IAA7BxC,EAA6ByC,UAAA9C,OAAA,QAAA+C,IAAAD,UAAA,GAAAA,UAAA,GAAvBF,EAAuBE,UAAA9C,OAAA,GAAA8C,UAAA,GAC/C,OAAOzC,GCKL2C,EAAQC,YAAYJ,GAE1BK,IAASC,OAAOlF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAUJ,MAAOA,GAAO/E,EAAAC,EAAAC,cAACkF,EAAD,OAAoBC,SAASC,eAAe,SFsH9E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.711c1f76.chunk.js","sourcesContent":["import React from 'react';\r\nconst navbarCollapse = () => {\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-md\">\r\n                <div className=\"container\">\r\n                    <a className=\"navbar-brand\" href=\"/\">QuizMaster</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\"\r\n                        aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"/\">github</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default navbarCollapse","import React, { Component } from 'react';\r\n\r\nclass Welcome extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    <div className=\"note-wrap\">\r\n                        <div className=\"section-heading text-center\">\r\n                            <h1>Welcome To QuizMaster!</h1>\r\n                        </div>\r\n                        <div className=\"section-body\">\r\n                            Hello there! It's a Quiz app built using react Js just for fun and learning. Please click \"START THE QUIZ\" button to go through the questions. All the questions are related to basic coumputer knowledge. So have fun. :)\r\n                        </div>\r\n                        <div className=\"section-footer text-center\">\r\n                            <span className=\"btn btn-primary\" onClick={this.props.showQuiz}>Start The Quiz</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Welcome\r\n","import React, { Component } from 'react';\r\n\r\nclass Option extends Component {\r\n    handleClick = (e) => {\r\n        this.props.answered(e.currentTarget.id)\r\n    }\r\n    render() {\r\n        let {css_class} = this.props;\r\n        const optionList = this.props.options.map( (option, index) => {\r\n            let className = css_class.length ? 'option ' + css_class[index] : 'option'\r\n            return (\r\n                <div className={className} key={index} id={index} onClick={() => this.props.answered(index)}>\r\n                    <span className=\"text-center\">{String.fromCharCode(65 + index)}</span>{option}\r\n                </div>\r\n                )\r\n            }\r\n        )\r\n        return (\r\n            <div>\r\n                {optionList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Option","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Option from './Option'\r\n\r\nclass Quiz extends Component {\r\n    state = {\r\n        qi: 1,\r\n        total : this.props.question_set.length,\r\n        answered: false,\r\n        correct: 0,\r\n        css_class: []\r\n    }\r\n    showNext = () => {\r\n        if (this.state.qi < this.state.total ) {\r\n            let qi = this.state.qi + 1\r\n            this.setState({\r\n                answered: false,\r\n                qi: qi,\r\n                css_class: []\r\n            })\r\n        } else if(this.state.qi === this.state.total && this.state.answered === false) {\r\n            this.setState({\r\n                answered: true\r\n            })\r\n        } else {\r\n            this.props.showResult(this.state.total, this.state.correct)\r\n        }\r\n    }\r\n    answered = (index) => {\r\n        const optionLength = this.props.question_set[this.state.qi -1].options.length\r\n        const css = []\r\n        if(false === this.state.answered) {\r\n            for( let i = 0; i < optionLength; ++i) {\r\n                if (i === index && (index + 1) === this.props.question_set[this.state.qi -1].answer_number) {\r\n                    css.push('correct')\r\n                } else if (i === index && (index + 1) !== this.props.question_set[this.state.qi -1].answer_number) {\r\n                    css.push('incorrect')\r\n                } else if ( i !== index && i === this.props.question_set[this.state.qi -1].answer_number - 1) {\r\n                    css.push('correct')\r\n                } else {\r\n                    css.push('disabled')\r\n                }\r\n                this.setState({\r\n                    css_class: css\r\n                })\r\n            }\r\n            if ( (index + 1) === this.props.question_set[this.state.qi -1].answer_number) {\r\n                this.setState({\r\n                    answered: true,\r\n                    correct: this.state.correct + 1\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    answered: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const {question_set} = this.props\r\n        let currentQuestion = question_set[this.state.qi -1]\r\n        const btn_class = this.state.answered ? 'btn btn-primary' : 'btn btn-secondary'\r\n        return (\r\n            <div className=\"quiz-wrap\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                        <div className=\"question-wrap\">\r\n                            <div className=\"section-heading text-center\">\r\n                                <h1>Question {this.state.qi}/{this.state.total}</h1>\r\n                            </div>\r\n                            <div className=\"section-body\">\r\n                                {currentQuestion.question} <br/>\r\n                            </div>\r\n                            <div className=\"section-footer text-center\">\r\n                                <span className={btn_class} onClick={this.showNext}>\r\n                                    {this.state.qi !== this.state.total ? (this.state.answered ? \"Next Question\" : \"Skip This Question\") : (this.state.answered ? \"See Result\" : \"Skip This Question\")}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                        <div className=\"options-wrap\">\r\n                            <Option options={currentQuestion.options} css_class={this.state.css_class} answered={this.answered} />\r\n                            <div className=\"instruction text-right\">Choose option from above</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProp = (state) => {\r\n    return {\r\n        question_set: state.question_set\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProp)(Quiz)","import React, { Component } from 'react';\r\n\r\nclass Result extends Component {\r\n    render() {\r\n        let percent = ((this.props.correct / this.props.total) * 100).toFixed(1);\r\n        percent = percent % 1 === 0 ? Math.floor(percent) : percent\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    <div className=\"note-wrap\">\r\n                        <div className=\"section-heading text-center\">\r\n                            <h1>Congratulation! Your result!</h1>\r\n                        </div>\r\n                        <div className=\"section-body\">\r\n                            <div className=\"result-count text-center\">\r\n                                You Have answered <span className=\"highltght\">{this.props.correct}</span> out of <span className=\"highltght\">{this.props.total}</span> questions correctly.\r\n                                <br/>Your score <span className=\"highltght\">{percent}%</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"section-footer text-center\">\r\n                            <span className=\"btn btn-primary\" onClick={this.props.showQuiz}>Start Again</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Result\r\n","import React, { Component } from 'react';\r\nimport Welcome from './Welcome'\r\nimport Quiz from './Quiz'\r\nimport Result from './Result'\r\n\r\nclass Container extends Component {\r\n    state = {\r\n        comp: 'welcome'\r\n    }\r\n    showQuiz = () => {\r\n        this.setState({\r\n            comp: 'quiz'\r\n        })\r\n    }\r\n    showResult = (total, correct) => {\r\n        this.setState({\r\n            comp: 'result',\r\n            total: total,\r\n            correct: correct\r\n        })\r\n    }\r\n    VisibleComponent = () => {\r\n        switch(this.state.comp){\r\n            case 'quiz': {\r\n            return (<Quiz showResult={this.showResult} />)\r\n            }\r\n            case 'result': {\r\n                return (<Result showQuiz={this.showQuiz} total={this.state.total} correct={this.state.correct} />)\r\n            }\r\n            default: {\r\n            return(<Welcome showQuiz={this.showQuiz}/>)\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"main-content\">\r\n                <div className=\"container\">\r\n                    {this.VisibleComponent()}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Container","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <footer className=\"footer\">\r\n            <div className=\"container text-center\">\r\n                Made with <span>&#9829;</span> by Biswajit Saha\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport Navbar from './components/Navbar';\nimport Container from './components/Container';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Navbar />\n        <Container />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Data from \"../data/Quiz.json\"\r\nconst initState = Data\r\n\r\nconst rootReducer = ( state=initState, action ) => {\r\n    return state\r\n}\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/style.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers/rootReducer'\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}